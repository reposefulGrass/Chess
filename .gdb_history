n
print alpha + (i * alt)
print alpha
n
pritn *piece
print *piece
n
n
print positions[0]
n
quit
b 192
r
n
print piece->owner
qut
quit
b 192
r
n
print owner
print opposite
n
n
print i
n
n
n
n
b if alt = 1
c
n
print i
n
print i
n
n
backtrace
r
quit
b 186
r
print alt
n
print alt
c
n
r
c
print *piece
print piece
print alpha
print numeral + (i * alt)
board[64 - (numeral + (i * alt)) + alpha - 'A']
print board[64 - (numeral + (i * alt)) + alpha - 'A']
print *board[64 - (numeral + (i * alt)) + alpha - 'A']
print alpha
qui
b 207
r
n
print *piece
n
print i
n
print *piece
quit
r
print *piece
backtrace
quit
b 208
r
n
print i
print numeral
print alt
print numeral + (i * alt)
n
n
n
n
n
print alt
quit
b 208
r
n
print i
print numeral + (i * alt)
n
print numeral + (i * alt)
n
print alt
print numeral + (i * alt)
n
print numeral + (i * alt)
n
print numeral + (i * alt)
print alpha
print *board[64 - (numeral + (i * alt)) + alpha - 'A']
print *board[64 - (numeral + (i * alt)) * 8 + alpha - 'A']
print i
r
b 204
quit
b 204
r
n
n
b if alt = 1
c
print alt
print i
n
print piece
print *piece
print alpha
print numeral + (i * alt)
quit
b amin
b main
r
n
n
n
s
s
n
n
s
n
n
print current_pos
n
n
n
print y_delta
n
n
r
b piece_delta
b piece_deltas
r
n
dash history
n
n
c
n
dash stack
n
n
n
n
quit
b piece_deltas
r
c
r
n
n
quit
b piece_deltas
r
n
clear
qut
quit
b main
r
n
n
n
n
n
n
s
n
n
n
n
quit
b main
r
n
n
n
print *empty
board[64 - 3 * 8 + 3]
print board[64 - 3 * 8 + 3]
*board[64 - 3 * 8 + 3]
print *board[64 - 3 * 8 + 3]
print board_at2(&board, position('D', 3), NULL)
print *board_at2(&board, position('D', 3), NULL)
n
n
n
n
n
n
n
n
n
n
n
n
n
r
n
n
n
n
s
quit
b 422
r
s
print *board_at(&board, position('A', 0))
clear
quit
r
clear
quit
b board_destroy
r
n
n
print *piece
n
n
n
n
n
n
n
quit
b board_destroy
r
n
n
b if alpha == 'D'
r
c
n
n
n
n
print numeral
n
n
n
print *piece
n
n
quit
